name: CI/CD Pipeline for Terraform and Ansible

on:
  push:
    branches:
      - lucas

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GCP credentials (from base64)
        run: |
          mkdir -p /home/runner/gcp_credentials
          echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 -d > /home/runner/gcp_credentials/credentials.json
          chmod 600 /home/runner/gcp_credentials/credentials.json

      - name: Set up SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/id_rsa.pub

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=planfile \
            -var "project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var "region=${{ secrets.GCP_REGION }}" \
            -var "zone=${{ secrets.GCP_ZONE }}" \
            -var "credentials_file_path=/home/runner/gcp_credentials/credentials.json" \
            -var "public_key_path=~/.ssh/id_rsa.pub"

      - name: Terraform Apply and extract VM IP
        run: |
          cd terraform
          terraform apply -auto-approve planfile
          terraform output -raw vm_ip | tr -d '\r' > ../vm_ip.txt
          echo "IP salvo em vm_ip.txt:"
          cat ../vm_ip.txt

      - name: Confirmar conteúdo de vm_ip.txt
        run: |
          echo "Verificando existência e conteúdo do arquivo vm_ip.txt..."
          ls -l vm_ip.txt || echo "Arquivo não encontrado!"
          cat vm_ip.txt || echo "Arquivo vazio!"

      - name: Debug IP da VM
        run: |
          VM_IP=$(cat vm_ip.txt | tr -d '\r')
          echo "IP da VM é: $VM_IP"

      - name: Aguardar SSH da VM ficar disponível
        run: |
          VM_IP=$(cat vm_ip.txt | tr -d '\r')
          for i in {1..2}; do
            if nc -z $VM_IP 22; then
              echo "SSH disponível em $VM_IP"
              break
            fi
            echo "Aguardando SSH em $VM_IP:22..."
            sleep 5
          done

      - name: Instalar Ansible e preparar acesso SSH
        run: |
          set -e

          VM_IP=$(cat vm_ip.txt | tr -d '\r')

          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y ansible sshpass

          echo "Adicionando $VM_IP ao known_hosts..."
          ssh-keyscan -H "$VM_IP" >> ~/.ssh/known_hosts || true
          true

      - name: Executar Ansible Playbook diretamente com IP
        run: |
          VM_IP=$(cat vm_ip.txt | tr -d '\r')
          cd ansible
          ansible-playbook playbook.yml --user=ubuntu --private-key=~/.ssh/id_rsa -i "$VM_IP,"
