name: CI/CD Pipeline for Terraform and Ansible

on:
  push:
    branches:
      - lucas

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GCP credentials (from base64)
        run: |
          mkdir -p /home/runner/gcp_credentials
          echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 -d > /home/runner/gcp_credentials/credentials.json
          chmod 600 /home/runner/gcp_credentials/credentials.json
          head -n 5 /home/runner/gcp_credentials/credentials.json

      - name: Set up SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/id_rsa.pub

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.1

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      # Gerar o arquivo de plano
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=planfile \
            -var "project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var "region=${{ secrets.GCP_REGION }}" \
            -var "zone=${{ secrets.GCP_ZONE }}" \
            -var "credentials_file_path=/home/runner/gcp_credentials/credentials.json" \
            -var "public_key_path=~/.ssh/id_rsa.pub"

      # Aplicar o plano
      - name: Terraform Apply and get VM IP
        id: apply
        run: |
          cd terraform
          terraform apply -auto-approve planfile
          terraform output -raw vm_ip > vm_ip.txt

      - name: Update Ansible inventory with the new VM IP
        run: |
          NEW_VM_IP=$(cd terraform && terraform output -raw vm_ip | tr -d '\r')
          echo "Novo IP da VM: $NEW_VM_IP"
          sed -i "s@<ip_da_vm>@$NEW_VM_IP@" ansible/inventory.ini
          cat ansible/inventory.ini


      - name: Set up Ansible and SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible sshpass

          # ssh jÃ¡ foi configurado no passo anterior
          ssh-keyscan -H $(cat terraform/vm_ip.txt) >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.ini playbook.yml --user=ubuntu --private-key=~/.ssh/id_rsa
