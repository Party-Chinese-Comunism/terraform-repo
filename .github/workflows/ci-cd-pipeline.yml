name: CI/CD Pipeline for Terraform and Ansible

on:
  push:
    branches:
      - lucas

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.12.1"

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Create GCP credentials file
        run: |
          # Cria o diretório de credenciais com o caminho absoluto
          mkdir -p $HOME/gcp_credentials

          # Grava o conteúdo do Secret no arquivo JSON
          echo "${{ secrets.GCP_CREDENTIALS }}" > $HOME/gcp_credentials/credentials.json

          # Verifica o conteúdo do arquivo de credenciais nos logs
          echo "Contents of the credentials file:"
          cat $HOME/gcp_credentials/credentials.json

          # Define as permissões do arquivo de credenciais
          chmod 600 $HOME/gcp_credentials/credentials.json

      - name: Terraform Apply and get VM IP
        id: apply
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var "project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var "region=${{ secrets.GCP_REGION }}" \
            -var "zone=${{ secrets.GCP_ZONE }}" \
            -var "credentials_file_path=$HOME/gcp_credentials/credentials.json"
          echo "VM IP is $(terraform output -raw vm_ip)" > vm_ip.txt

      - name: Update Ansible inventory with the new VM IP
        run: |
          NEW_VM_IP=$(cat vm_ip.txt)
          cd ansible
          sed -i "s/<ip_da_vm>/$NEW_VM_IP/" inventory.ini

      - name: Set up Ansible
        run: |
          sudo apt-get install -y ansible
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.ini playbook.yml
        env:
          ANSIBLE_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
